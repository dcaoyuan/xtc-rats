/*
 * xtc - The eXTensible Compiler
 * Copyright (C) 2009-2012 New York University
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
 * USA.
 */

/**
 * The expression grammar.  This is used for parsing conditional expressions.
 * It is separate from the CPP core grammar because macros are expanded before
 * expression parsing.
 *
 * @author Paul Gazzillo
 * @version $Revision: 1.7 $
 */
module xtc.lang.cpp.Condition;

instantiate xtc.lang.CConstant(xtc.lang.cpp.Spacing);
instantiate xtc.lang.cpp.Constant(xtc.lang.CConstant);
instantiate xtc.util.Symbol(xtc.lang.cpp.Spacing);
instantiate xtc.lang.cpp.Symbol(xtc.util.Symbol);
instantiate xtc.lang.cpp.Identifier(xtc.lang.cpp.Reserved,
                                    xtc.lang.cpp.Spacing,
                                    xtc.lang.cpp.Symbol);
instantiate xtc.lang.cpp.Spacing();

modify xtc.lang.cpp.Expression(xtc.lang.cpp.Constant,
                               xtc.lang.cpp.Identifier,
                               xtc.lang.cpp.Symbol,
                               xtc.lang.cpp.Spacing);

option withLocation, constant, flatten, main(ConstantExpression);
